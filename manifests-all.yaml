# Derived from ./manifests
---
apiVersion: v1
kind: Namespace
metadata:
  name: logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch
  namespace: logging
data:
  elasticsearch.yml: |
    cluster.name: ${cluster_name}
    network.host: 0.0.0.0

    # minimum_master_nodes need to be explicitly set when bound on a public IP
    # set to 1 to allow single node clusters
    # Details: https://github.com/elastic/elasticsearch/pull/17288
    discovery.zen.minimum_master_nodes: 1

    bootstrap.memory_lock: ${bootstrap_memory_lock}
    xpack.security.enabled: false

  jvm.options: |
    ## JVM configuration

    ################################################################
    ## IMPORTANT: JVM heap size
    ################################################################
    ##
    ## You should always set the min and max JVM heap
    ## size to the same value. For example, to set
    ## the heap to 4 GB, set:
    ##
    ## -Xms4g
    ## -Xmx4g
    ##
    ## See https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html
    ## for more information
    ##
    ################################################################

    # Xms represents the initial size of total heap space
    # Xmx represents the maximum size of total heap space

    -Xms2g
    -Xmx2g

    ################################################################
    ## Expert settings
    ################################################################
    ##
    ## All settings below this section are considered
    ## expert settings. Don't tamper with them unless
    ## you understand what you are doing
    ##
    ################################################################

    ## GC configuration
    -XX:+UseConcMarkSweepGC
    -XX:CMSInitiatingOccupancyFraction=75
    -XX:+UseCMSInitiatingOccupancyOnly

    ## optimizations

    # disable calls to System#gc
    -XX:+DisableExplicitGC

    # pre-touch memory pages used by the JVM during initialization
    -XX:+AlwaysPreTouch

    ## basic

    # force the server VM (remove on 32-bit client JVMs)
    -server

    # explicitly set the stack size (reduce to 320k on 32-bit client JVMs)
    -Xss1m

    # set to headless, just in case
    -Djava.awt.headless=true

    # ensure UTF-8 encoding by default (e.g. filenames)
    -Dfile.encoding=UTF-8

    # use our provided JNA always versus the system one
    -Djna.nosys=true

    # use old-style file permissions on JDK9
    -Djdk.io.permissionsUseCanonicalPath=true

    # flags to configure Netty
    -Dio.netty.noUnsafe=true
    -Dio.netty.noKeySetOptimization=true
    -Dio.netty.recycler.maxCapacityPerThread=0

    # log4j 2
    -Dlog4j.shutdownHookEnabled=false
    -Dlog4j2.disable.jmx=true
    -Dlog4j.skipJansi=true

    ## heap dumps

    # generate a heap dump when an allocation from the Java heap fails
    # heap dumps are created in the working directory of the JVM
    -XX:+HeapDumpOnOutOfMemoryError

    # specify an alternative path for heap dumps
    # ensure the directory exists and has sufficient space
    #-XX:HeapDumpPath=${heap.dump.path}

    ## GC logging

    #-XX:+PrintGCDetails
    #-XX:+PrintGCTimeStamps
    #-XX:+PrintGCDateStamps
    #-XX:+PrintClassHistogram
    #-XX:+PrintTenuringDistribution
    #-XX:+PrintGCApplicationStoppedTime

    # log GC status to a file with time stamps
    # ensure the directory exists
    #-Xloggc:${loggc}

    # Elasticsearch 5.0.0 will throw an exception on unquoted field names in JSON.
    # If documents were already indexed with unquoted fields in a previous version
    # of Elasticsearch, some operations may throw errors.
    #
    # WARNING: This option will be removed in Elasticsearch 6.0.0 and is provided
    # only for migration purposes.
    #-Delasticsearch.json.allow_unquoted_field_names=true

  log4j2.properties: |
    status = error

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: curator-config
  namespace: logging
data:
  action_file.yml: |-
    ---
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    #
    # Also remember that all examples have 'disable_action' set to True.  If you
    # want to use this action as a template, be sure to set this to False after
    # copying it.
    actions:
      1:
        action: delete_indices
        description: "Clean up ES by deleting old indices"
        options:
          timeout_override:
          continue_if_exception: False
          disable_action: False
        filters:
        - filtertype: age
          source: name
          direction: older
          timestring: '%Y.%m.%d'
          unit: days
          unit_count: 3
          field:
          stats_result:
          epoch:
          exclude: False
  config.yml: |-
    ---
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    client:
      hosts:
        - elasticsearch
      port: 9200
      url_prefix:
      use_ssl: False
      certificate:
      client_cert:
      client_key:
      ssl_no_validate: False
      http_auth:
      timeout: 30
      master_only: False

    logging:
      loglevel: INFO
      logfile:
      logformat: default
      blacklist: ['elasticsearch', 'urllib3']
---
apiVersion: batch/v2alpha1
kind: CronJob
metadata:
  name: curator
  namespace: logging
spec:
  schedule: 1 0 * * *
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: curator
            image: bobrik/curator:4.2.6
            imagePullPolicy: IfNotPresent
            args: ["--config", "/etc/config/config.yml", "/etc/config/action_file.yml"]
            volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          volumes:
          - name: config-volume
            configMap:
              name: curator-config
          restartPolicy: OnFailure
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: logging
spec:
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
      annotations:
        # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
        # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
        imagePullPolicy: IfNotPresent
        # workarounds until https://github.com/kubernetes/kubernetes/issues/30120
        env:
        - name: cluster_name
          value: kubernetes-cluster
        - name: bootstrap_memory_lock
          value: "false"
          #^ unless ulimits for "memlock" can be set via kubernetes
          # see https://github.com/kubernetes/kubernetes/issues/3595
        # - name: transport.host
        #   value: 127.0.0.1
        # - name: discovery.zen.ping.unicast.hosts
        #   value: elasticsearch_other
        - name: "ES_JAVA_OPTS"
          value: "-Xms1g -Xmx1g"
        ports:
        - containerPort: 9200
          name: api
          protocol: TCP
        # - containerPort: 9300
        #   name: transport
        #   protocol: TCP
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 1000m
            memory: 2G
          requests:
            cpu: 1000m
            memory: 1G
        securityContext:
          privileged: true
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        # FIXME add probes
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/config
        - name: data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: config
        configMap:
          name: elasticsearch
      - name: "data"
        emptyDir:
          medium: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eventrouter
  namespace: logging
data:
  config.json: |
    {
      "sink": "glog"
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: eventrouter
  namespace: logging
spec:
  # TODO - Set to 2 when ConfigMap locking is merged ~1.7
  # https://github.com/kubernetes/kubernetes/pull/42666
  replicas: 1
  template:
    metadata:
      labels:
        component: eventrouter
    spec:
      containers:
      - name: eventrouter
        # image: gcr.io/heptio-images/eventrouter:v0.1
        image: giantswarm/eventrouter:0.1.2
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: config
          mountPath: /etc/eventrouter
      volumes:
      - name: config
        configMap:
          name: eventrouter
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat
  namespace: logging
  labels:
    component: filebeat
data:
  filebeat.yml: |
    filebeat.prospectors:

    # log lines from host
    - input_type: log
      tags:
      - host
      paths:
      - "/hostfs/var/log"
      - "/hostfs/var/log/*"
      - "/hostfs/var/log/*/*"
      # - "/hostfs/var/log/dmesg"
      # - "/hostfs/var/log/syslog"
      exclude_files:
      - '\.[0-9]$'
      - '\.[0-9]\.gz$'

    # log lines from containers
    - input_type: log
      tags:
      - docker
      paths:
      - /hostfs/var/lib/docker/containers/*/*-json.log
      json:
        keys_under_root: false
        message_key: log
        add_error_key: true
      multiline:
        pattern: '^[[:space:]]+|^Caused by:'
        negate: false
        match: after
      # processors:
      # - decode_json_fields:
      #     # fields: ["log", "metadata", "json.log"]
      #     fields: ["json.log"]
      #     target: "test"

    output.elasticsearch:
      hosts: ["elasticsearch:9200"]
      template.name: "filebeat"
      template.path: "filebeat.template.json"
      template.overwrite: true

    # Available log levels are: critical, error, warning, info, debug
    logging.level: info
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: logging
spec:
  template:
    metadata:
      labels:
        component: filebeat
    spec:
      containers:
<<<<<<< HEAD:manifests/filebeat/daemonset.yaml
      - name: filebeat
        image: giantswarm/filebeat:5.2.2
        imagePullPolicy: IfNotPresent
=======
      - image: giantswarm/filebeat:5.2.0
        name: filebeat
        env:
>>>>>>> master:manifests/filebeat-daemonset.yaml
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        volumeMounts:
<<<<<<< HEAD:manifests/filebeat/daemonset.yaml
        - name: config
=======
        - name: containers
          mountPath: /hostfs/var/lib/docker/containers
        # - name: hostlog
        #   mountPath: /varlog
        - name: config-volume
>>>>>>> master:manifests/filebeat-daemonset.yaml
          mountPath: /etc/filebeat
          readOnly: true
        - name: hostfs-var-lib-docker-containers
          mountPath: /hostfs/var/lib/docker/containers
          readOnly: true
        - name: hostfs-var-log
          mountPath: /hostfs/var/log
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: filebeat
      - name: hostfs-var-log
        hostPath:
          path: /var/log
      - name: hostfs-var-lib-docker-containers
        hostPath:
          path: /var/lib/docker/containers
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: logging
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: kibana
    spec:
      containers:
      - name: kibana
        image: kibana:5.2.2
        imagePullPolicy: IfNotPresent
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        env:
        - name: "ELASTICSEARCH_URL"
          value: "http://elasticsearch:9200"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: logging
  labels:
    component: kibana
spec:
  type: NodePort
  ports:
  - port: 5601
    protocol: TCP
    targetPort: ui
  selector:
    component: kibana
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-events
  namespace: logging
  labels:
    app: kube-events
spec:
  template:
    metadata:
      labels:
        app: kube-events
    spec:
      containers:
      - name: kube-events
        image: giantswarm/tiny-tools:0.1.0
        imagePullPolicy: IfNotPresent
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        env:
        - name: TERM
          value: xterm
        command:
        - fish
        - --command
        - |
          set kube_token (cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          # FIXME move `resource_version` to a volume
          touch ./resource_version
          while true
            set resource_version (cat ./resource_version)
            echo "starting with \$resource_version: $resource_version"

            curl --silent --fail --show-error --insecure --header "Authorization: Bearer $kube_token" \
              --request GET "https://kubernetes.default.svc/api/v1/watch/events?resourceVersion=$resource_version" \
                | while read -l event

              if test (echo $event | jq -r '.object.metadata.resourceVersion') = "null"
                echo "got \"null\""
                sleep 10
                break
              end

              set -l index "kube-events-"(date --utc -I)
              while not curl --silent --fail --show-error \
                --request POST http://elasticsearch.logging.svc:9200/$index/event --data "$event" \
                  | read -l es_result
                echo "\$status: $status"
                sleep 10
              end

              set resource_version (echo $event | jq -r '.object.metadata.resourceVersion')
              echo $resource_version > ./resource_version
              echo "last fetched \$resource_version: $resource_version"
            end

            echo "starting over"
          end
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    component: elasticsearch
spec:
  type: NodePort
  ports:
  - port: 9200
    protocol: TCP
    targetPort: api
  selector:
    component: elasticsearch
