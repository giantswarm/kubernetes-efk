apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: kube-system
  labels:
    app: filebeat
spec:
  template:
    metadata:
      name: filebeat
      namespace: kube-system
      labels:
        app: filebeat
    spec:
      initContainers:
      - name: filebeat-init
        image: docker.elastic.co/beats/filebeat:6.0.0-rc1
        imagePullPolicy: IfNotPresent
        env:
        - name: ES_PASSWORD
          value: changeme
        command:
          - "sh"
          - "-c"
          - |
            chown -R 1000:100 /usr/share/filebeat/data
            # chown -R 1000:100 /hostfs/var/lib/docker/containers

            # until curl -u elastic:changeme -s http://elasticsearch:9200/_cat/health -o /dev/null; do
            #     echo Waiting for Elasticsearch...
            #     sleep 1
            # done
            # until curl -s http://kibana:5601/login -o /dev/null; do
            #     echo Waiting for Kibana...
            #     sleep 1
            # done
            #
            # # Load any declared ingest pipelines
            # PIPELINES=/usr/share/filebeat/pipelines.d/*.json
            # for f in $PIPELINES
            # do
            #   filename=$(basename $f)
            #   pipeline_id="${filename%.*}"
            #   echo "Loading $pipeline_id ingest chain..."
            #   curl -s  -H 'Content-Type: application/json' \
            #     -XPUT http://elastic:${ES_PASSWORD}@elasticsearch:9200/_ingest/pipeline/$pipeline_id -d@$f
            # done

            # # Load any declared extra index templates
            # TEMPLATES=/usr/share/filebeat/templates/*.json
            # for f in $TEMPLATES
            # do
            #   filename=$(basename $f)
            #   template_id="${filename%.*}"
            #   echo "Loading $template_id template..."
            #   curl -s  -H 'Content-Type: application/json' \
            #     -XPUT http://elastic:${ES_PASSWORD}@elasticsearch:9200/_template/$template_id -d@$f
            #   #We assume we want an index pattern in kibana
            #   curl -s -XPUT http://elastic:${ES_PASSWORD}@elasticsearch:9200/.kibana/index-pattern/$template_id-* \
            #     -d "{\"title\" : \"$template_id-*\",  \"timeFieldName\": \"@timestamp\"}"
            # done
        securityContext:
          runAsUser: 0
        volumeMounts:
        # - name: init-pipelines
        #   mountPath: /usr/share/filebeat/pipelines.d
        # - name: init-templates
        #   mountPath: /usr/share/filebeat/templates.d
        - name: data
          mountPath: /usr/share/filebeat/data
        # - name: hostfs-containers
        #   mountPath: /hostfs/var/lib/docker/containers
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:6.0.0-rc1
        imagePullPolicy: IfNotPresent
        args:
        - filebeat
        - -e
        - -E
        - output.elasticsearch.username=elastic
        - -E
        - output.elasticsearch.password=changeme
        - -strict.perms=false
        securityContext:
          runAsUser: 0
        resources: {}
        volumeMounts:
        - name: config
          mountPath: /usr/share/filebeat/filebeat.yml
          subPath: filebeat.yml
        - name: config-prospectors
          mountPath: /usr/share/filebeat/prospectors.d/
        - name: hostfs-log
          mountPath: /hostfs/var/log
        - name: hostfs-docker-containers
          mountPath: /hostfs/var/lib/docker/containers
        - name: data
          mountPath: /usr/share/filebeat/data/
        - name: minikube-var-lib-docker-containers
          mountPath: /mnt/sda1/var/lib/docker/containers

        # - mountPath: /var/log/nginx/
        # - mountPath: /var/log/apache2/
        # - mountPath: /var/log/mysql/
        # - mountPath: /var/log/host/
        #   readOnly: true

      securityContext:
        fsGroup: 1000
      volumes:
      # - name: init-pipelines
      #   configMap:
      #     name: filebeat-init-pipelines
      # - name: init-templates
      #   configMap:
      #     name: filebeat-init-templates
      - name: config
        configMap:
          name: filebeat
      - name: config-prospectors
        configMap:
          name: filebeat-prospectors
      # - name: data
      #   persistentVolumeClaim:
      #     claimName: filebeat
      - name: data
        hostPath:
          path: /srv/filebeat-data
      - name: hostfs-log
        hostPath:
          path: /var/log
      - name: hostfs-docker-containers
        hostPath:
          path: /var/lib/docker/containers
      - name: minikube-var-lib-docker-containers
        hostPath:
          path: /mnt/sda1/var/lib/docker/containers
